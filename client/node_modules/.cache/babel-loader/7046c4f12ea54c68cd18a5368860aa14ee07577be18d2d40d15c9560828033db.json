{"ast":null,"code":"let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n    getRandomValues = crypto.getRandomValues.bind(crypto);\n  }\n  return getRandomValues(rnds8);\n}","map":{"version":3,"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","Error","bind"],"sources":["../../src/rng-browser.ts"],"sourcesContent":[null],"mappings":"AAIA,IAAIA,eAA0D;AAE9D,MAAMC,KAAK,GAAG,IAAIC,UAAU,CAAC,EAAE,CAAC;AAEhC,eAAc,SAAUC,GAAGA,CAAA;EAEzB,IAAI,CAACH,eAAe,EAAE;IACpB,IAAI,OAAOI,MAAM,KAAK,WAAW,IAAI,CAACA,MAAM,CAACJ,eAAe,EAAE;MAC5D,MAAM,IAAIK,KAAK,CACb,0GAA0G,CAC3G;IACH;IAEAL,eAAe,GAAGI,MAAM,CAACJ,eAAe,CAACM,IAAI,CAACF,MAAM,CAAC;EACvD;EAEA,OAAOJ,eAAe,CAACC,KAAK,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}