{"ast":null,"code":"var _jsxFileName = \"/home/zaki/All/Documents/Textivo/client/src/components/Contacts.js\";\nimport React from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { useContacts } from '../contexts/ContactsProvider';\nexport default function Contacts() {\n  const {\n    contacts\n  } = useContacts();\n  return /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, contacts.map(contact => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: contact.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, contact.name)));\n}","map":{"version":3,"names":["React","ListGroup","useContacts","Contacts","contacts","createElement","variant","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","Item","key","id","name"],"sources":["/home/zaki/All/Documents/Textivo/client/src/components/Contacts.js"],"sourcesContent":["import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\nimport { useContacts } from '../contexts/ContactsProvider';\n\nexport default function Contacts() {\n  const { contacts } = useContacts()\n\n  return (\n    <ListGroup variant=\"flush\">\n      {contacts.map(contact => (\n        <ListGroup.Item key={contact.id}>\n          {contact.name}\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,WAAW,QAAQ,8BAA8B;AAE1D,eAAe,SAASC,QAAQA,CAAA,EAAG;EACjC,MAAM;IAAEC;EAAS,CAAC,GAAGF,WAAW,CAAC,CAAC;EAElC,oBACEF,KAAA,CAAAK,aAAA,CAACJ,SAAS;IAACK,OAAO,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvBR,QAAQ,CAACS,GAAG,CAACC,OAAO,iBACnBd,KAAA,CAAAK,aAAA,CAACJ,SAAS,CAACc,IAAI;IAACC,GAAG,EAAEF,OAAO,CAACG,EAAG;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7BE,OAAO,CAACI,IACK,CACjB,CACQ,CAAC;AAEhB","ignoreList":[]},"metadata":{},"sourceType":"module"}