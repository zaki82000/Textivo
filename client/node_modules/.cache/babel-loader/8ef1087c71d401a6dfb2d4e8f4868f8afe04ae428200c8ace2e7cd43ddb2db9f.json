{"ast":null,"code":"var _jsxFileName = \"/home/zaki/All/Documents/Textivo/client/src/components/NewConversationModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { contacts } from '../contexts/ContactsProvider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewConversationModal() {\n  _s();\n  const [selectedContactIds, setselectedContactIds] = useState([]);\n  function handleCheckboxChange(contactId) {\n    setselectedContactIds;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [contacts.map(contact => /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: contact.id,\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            value: selectedContactIds.includes(contact.id),\n            label: contact.name,\n            onChange: () => handleCheckboxChange(contact.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(NewConversationModal, \"ccGft3AdNf5cIKi/oq6pm5IH9LU=\");\n_c = NewConversationModal;\nvar _c;\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"names":["React","useState","Modal","Form","Button","contacts","jsxDEV","_jsxDEV","Fragment","_Fragment","NewConversationModal","_s","selectedContactIds","setselectedContactIds","handleCheckboxChange","contactId","children","Header","closeButton","fileName","_jsxFileName","lineNumber","columnNumber","Body","onSubmit","handleSubmit","map","contact","Group","controlId","id","Check","type","value","includes","label","name","onChange","_c","$RefreshReg$"],"sources":["/home/zaki/All/Documents/Textivo/client/src/components/NewConversationModal.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport { contacts } from '../contexts/ContactsProvider'\n\nexport default function NewConversationModal() {\n  const [selectedContactIds, setselectedContactIds] = useState([])\n  \n  function handleCheckboxChange(contactId) {\n    setselectedContactIds\n  }\n\n  return (\n    <>\n    <Modal.Header closeButton>Create Conversation</Modal.Header>\n    <Modal.Body>\n      <Form onSubmit={handleSubmit}>\n        {contacts.map(contact => (\n          <Form.Group controlId={contact.id} key={contact.id}>\n            <Form.Check\n              type=\"checkbox\"\n              value={selectedContactIds.includes(contact.id)}\n              label={contact.name}\n              onChange={() => handleCheckboxChange(contact.id)}\n            />\n          </Form.Group>\n        ))}\n    <Button type=\"submit\">Create</Button>\n      </Form>\n    </Modal.Body>\n  </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AACrD,SAASC,QAAQ,QAAQ,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvD,eAAe,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC7C,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhE,SAASa,oBAAoBA,CAACC,SAAS,EAAE;IACvCF,qBAAqB;EACvB;EAEA,oBACEN,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACAT,OAAA,CAACL,KAAK,CAACe,MAAM;MAACC,WAAW;MAAAF,QAAA,EAAC;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAC5Df,OAAA,CAACL,KAAK,CAACqB,IAAI;MAAAP,QAAA,eACTT,OAAA,CAACJ,IAAI;QAACqB,QAAQ,EAAEC,YAAa;QAAAT,QAAA,GAC1BX,QAAQ,CAACqB,GAAG,CAACC,OAAO,iBACnBpB,OAAA,CAACJ,IAAI,CAACyB,KAAK;UAACC,SAAS,EAAEF,OAAO,CAACG,EAAG;UAAAd,QAAA,eAChCT,OAAA,CAACJ,IAAI,CAAC4B,KAAK;YACTC,IAAI,EAAC,UAAU;YACfC,KAAK,EAAErB,kBAAkB,CAACsB,QAAQ,CAACP,OAAO,CAACG,EAAE,CAAE;YAC/CK,KAAK,EAAER,OAAO,CAACS,IAAK;YACpBC,QAAQ,EAAEA,CAAA,KAAMvB,oBAAoB,CAACa,OAAO,CAACG,EAAE;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD;QAAC,GANoCK,OAAO,CAACG,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOtC,CACb,CAAC,eACNf,OAAA,CAACH,MAAM;UAAC4B,IAAI,EAAC,QAAQ;UAAAhB,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACb,CAAC;AAEL;AAACX,EAAA,CA3BuBD,oBAAoB;AAAA4B,EAAA,GAApB5B,oBAAoB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}