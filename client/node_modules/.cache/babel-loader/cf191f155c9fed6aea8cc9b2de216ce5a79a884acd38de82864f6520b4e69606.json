{"ast":null,"code":"var _jsxFileName = \"/home/zaki/All/Documents/Textivo/client/src/components/NewConversationModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../contexts/ContactsProvider';\nimport ConversationsProvider from '../contexts/ConversationsProvider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewConversationModal({\n  closeModal\n}) {\n  _s();\n  const [selectedContactIds, setSelectedContactIds] = useState([]);\n  const {\n    contacts\n  } = useContacts();\n  const {\n    createConversation\n  } = useConversations();\n  function handleSubmit(e) {\n    e.preventDefault();\n    createConversation(selectedContactIds);\n    closeModal();\n  }\n  function handleCheckboxChange(contactId) {\n    setSelectedContactIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(prevId => prevId !== contactId);\n      } else {\n        return [...prevSelectedContactIds, contactId];\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [contacts.map(contact => /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: contact.id,\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            checked: selectedContactIds.includes(contact.id),\n            label: contact.name,\n            onChange: () => handleCheckboxChange(contact.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"mt-2\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(NewConversationModal, \"vQmONcecoWX1cwhaThpVMl7yKI4=\", true, function () {\n  return [useContacts];\n});\n_c = NewConversationModal;\nvar _c;\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"names":["React","useState","Modal","Form","Button","useContacts","ConversationsProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","NewConversationModal","closeModal","_s","selectedContactIds","setSelectedContactIds","contacts","createConversation","useConversations","handleSubmit","e","preventDefault","handleCheckboxChange","contactId","prevSelectedContactIds","includes","filter","prevId","children","Header","closeButton","fileName","_jsxFileName","lineNumber","columnNumber","Body","onSubmit","map","contact","Group","controlId","id","Check","type","checked","label","name","onChange","className","_c","$RefreshReg$"],"sources":["/home/zaki/All/Documents/Textivo/client/src/components/NewConversationModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../contexts/ContactsProvider';\nimport ConversationsProvider from '../contexts/ConversationsProvider';\n\nexport default function NewConversationModal({ closeModal }) {\n  const [selectedContactIds, setSelectedContactIds] = useState([]);\n  const { contacts } = useContacts();\n  const { createConversation } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    createConversation(selectedContactIds);\n    closeModal();\n  }\n\n  function handleCheckboxChange(contactId) {\n    setSelectedContactIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(prevId => prevId !== contactId);\n      } else {\n        return [...prevSelectedContactIds, contactId];\n      }\n    });\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>Create Conversation</Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          {contacts.map(contact => (\n            <Form.Group controlId={contact.id} key={contact.id}>\n              <Form.Check\n                type=\"checkbox\"\n                checked={selectedContactIds.includes(contact.id)}\n                label={contact.name}\n                onChange={() => handleCheckboxChange(contact.id)}\n              />\n            </Form.Group>\n          ))}\n          <Button type=\"submit\" className=\"mt-2\">Create</Button>\n        </Form>\n      </Modal.Body>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AACrD,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,OAAOC,qBAAqB,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtE,eAAe,SAASC,oBAAoBA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC3D,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM;IAAEe;EAAS,CAAC,GAAGX,WAAW,CAAC,CAAC;EAClC,MAAM;IAAEY;EAAmB,CAAC,GAAGC,gBAAgB,CAAC,CAAC;EAEjD,SAASC,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,kBAAkB,CAACH,kBAAkB,CAAC;IACtCF,UAAU,CAAC,CAAC;EACd;EAEA,SAASU,oBAAoBA,CAACC,SAAS,EAAE;IACvCR,qBAAqB,CAACS,sBAAsB,IAAI;MAC9C,IAAIA,sBAAsB,CAACC,QAAQ,CAACF,SAAS,CAAC,EAAE;QAC9C,OAAOC,sBAAsB,CAACE,MAAM,CAACC,MAAM,IAAIA,MAAM,KAAKJ,SAAS,CAAC;MACtE,CAAC,MAAM;QACL,OAAO,CAAC,GAAGC,sBAAsB,EAAED,SAAS,CAAC;MAC/C;IACF,CAAC,CAAC;EACJ;EAEA,oBACEf,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA,CAACN,KAAK,CAAC2B,MAAM;MAACC,WAAW;MAAAF,QAAA,EAAC;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAC5D1B,OAAA,CAACN,KAAK,CAACiC,IAAI;MAAAP,QAAA,eACTpB,OAAA,CAACL,IAAI;QAACiC,QAAQ,EAAEjB,YAAa;QAAAS,QAAA,GAC1BZ,QAAQ,CAACqB,GAAG,CAACC,OAAO,iBACnB9B,OAAA,CAACL,IAAI,CAACoC,KAAK;UAACC,SAAS,EAAEF,OAAO,CAACG,EAAG;UAAAb,QAAA,eAChCpB,OAAA,CAACL,IAAI,CAACuC,KAAK;YACTC,IAAI,EAAC,UAAU;YACfC,OAAO,EAAE9B,kBAAkB,CAACW,QAAQ,CAACa,OAAO,CAACG,EAAE,CAAE;YACjDI,KAAK,EAAEP,OAAO,CAACQ,IAAK;YACpBC,QAAQ,EAAEA,CAAA,KAAMzB,oBAAoB,CAACgB,OAAO,CAACG,EAAE;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD;QAAC,GANoCI,OAAO,CAACG,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOtC,CACb,CAAC,eACF1B,OAAA,CAACJ,MAAM;UAACuC,IAAI,EAAC,QAAQ;UAACK,SAAS,EAAC,MAAM;UAAApB,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACb,CAAC;AAEP;AAACrB,EAAA,CAzCuBF,oBAAoB;EAAA,QAErBN,WAAW;AAAA;AAAA4C,EAAA,GAFVtC,oBAAoB;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}