{"ast":null,"code":"var _jsxFileName = \"/home/zaki/All/Documents/Textivo/client/src/components/NewConversationModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../contexts/ContactsProvider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewConversationModal({\n  closeModal\n}) {\n  _s();\n  const [selectedContactIds, setselectedContactIds] = useState([]);\n  const {\n    contacts\n  } = useContacts();\n  function handleSubmit(e) {\n    e.preventDefault();\n    createConversation(selectedContactIds);\n    closeModal();\n  }\n  function handleCheckboxChange(contactId) {\n    setselectedContactIds(prevSelectedContactIda => {\n      if (prevSelectedContactIda.includes(contactId)) {\n        return prevSelectedContactIda.filter(prevId => {\n          return contactId !== prevId;\n        });\n      } else {\n        return [...prevSelectedContactIda, contactId];\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [contacts.map(contact => /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: contact.id,\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            value: selectedContactIds.includes(contact.id),\n            label: contact.name,\n            onChange: () => handleCheckboxChange(contact.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(NewConversationModal, \"qpXZdAzCBt95oHJGcbjfmN2SC0s=\", false, function () {\n  return [useContacts];\n});\n_c = NewConversationModal;\nvar _c;\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"names":["React","useState","Modal","Form","Button","useContacts","jsxDEV","_jsxDEV","Fragment","_Fragment","NewConversationModal","closeModal","_s","selectedContactIds","setselectedContactIds","contacts","handleSubmit","e","preventDefault","createConversation","handleCheckboxChange","contactId","prevSelectedContactIda","includes","filter","prevId","children","Header","closeButton","fileName","_jsxFileName","lineNumber","columnNumber","Body","onSubmit","map","contact","Group","controlId","id","Check","type","value","label","name","onChange","_c","$RefreshReg$"],"sources":["/home/zaki/All/Documents/Textivo/client/src/components/NewConversationModal.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport { useContacts } from '../contexts/ContactsProvider'\n\nexport default function NewConversationModal({ closeModal }) {\n  const [selectedContactIds, setselectedContactIds] = useState([])\n  const {contacts} = useContacts()\n\n  function handleSubmit(e){\n    e.preventDefault()\n\n    createConversation(selectedContactIds)\n    closeModal()\n  }\n\n  function handleCheckboxChange(contactId) {\n    setselectedContactIds(prevSelectedContactIda => {\n      if (prevSelectedContactIda.includes(contactId)) {\n        return prevSelectedContactIda.filter(prevId => {\n          return contactId !== prevId\n        })\n      } else {\n        return [...prevSelectedContactIda, contactId]\n      }\n  })\n  }\n\n  return (\n    <>\n    <Modal.Header closeButton>Create Conversation</Modal.Header>\n    <Modal.Body>\n      <Form onSubmit={handleSubmit}>\n        {contacts.map(contact => (\n          <Form.Group controlId={contact.id} key={contact.id}>\n            <Form.Check\n              type=\"checkbox\"\n              value={selectedContactIds.includes(contact.id)}\n              label={contact.name}\n              onChange={() => handleCheckboxChange(contact.id)}\n            />\n          </Form.Group>\n        ))}\n    <Button type=\"submit\">Create</Button>\n      </Form>\n    </Modal.Body>\n  </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AACrD,SAASC,WAAW,QAAQ,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1D,eAAe,SAASC,oBAAoBA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC3D,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM;IAACc;EAAQ,CAAC,GAAGV,WAAW,CAAC,CAAC;EAEhC,SAASW,YAAYA,CAACC,CAAC,EAAC;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElBC,kBAAkB,CAACN,kBAAkB,CAAC;IACtCF,UAAU,CAAC,CAAC;EACd;EAEA,SAASS,oBAAoBA,CAACC,SAAS,EAAE;IACvCP,qBAAqB,CAACQ,sBAAsB,IAAI;MAC9C,IAAIA,sBAAsB,CAACC,QAAQ,CAACF,SAAS,CAAC,EAAE;QAC9C,OAAOC,sBAAsB,CAACE,MAAM,CAACC,MAAM,IAAI;UAC7C,OAAOJ,SAAS,KAAKI,MAAM;QAC7B,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,OAAO,CAAC,GAAGH,sBAAsB,EAAED,SAAS,CAAC;MAC/C;IACJ,CAAC,CAAC;EACF;EAEA,oBACEd,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACAnB,OAAA,CAACL,KAAK,CAACyB,MAAM;MAACC,WAAW;MAAAF,QAAA,EAAC;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAC5DzB,OAAA,CAACL,KAAK,CAAC+B,IAAI;MAAAP,QAAA,eACTnB,OAAA,CAACJ,IAAI;QAAC+B,QAAQ,EAAElB,YAAa;QAAAU,QAAA,GAC1BX,QAAQ,CAACoB,GAAG,CAACC,OAAO,iBACnB7B,OAAA,CAACJ,IAAI,CAACkC,KAAK;UAACC,SAAS,EAAEF,OAAO,CAACG,EAAG;UAAAb,QAAA,eAChCnB,OAAA,CAACJ,IAAI,CAACqC,KAAK;YACTC,IAAI,EAAC,UAAU;YACfC,KAAK,EAAE7B,kBAAkB,CAACU,QAAQ,CAACa,OAAO,CAACG,EAAE,CAAE;YAC/CI,KAAK,EAAEP,OAAO,CAACQ,IAAK;YACpBC,QAAQ,EAAEA,CAAA,KAAMzB,oBAAoB,CAACgB,OAAO,CAACG,EAAE;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD;QAAC,GANoCI,OAAO,CAACG,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOtC,CACb,CAAC,eACNzB,OAAA,CAACH,MAAM;UAACqC,IAAI,EAAC,QAAQ;UAAAf,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACb,CAAC;AAEL;AAACpB,EAAA,CA3CuBF,oBAAoB;EAAA,QAEvBL,WAAW;AAAA;AAAAyC,EAAA,GAFRpC,oBAAoB;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}