{"ast":null,"code":"import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nconst _state = {};\nfunction v1(options, buf, offset) {\n  let bytes;\n  const isV6 = options?._v6 ?? false;\n  if (options) {\n    const optionsKeys = Object.keys(options);\n    if (optionsKeys.length === 1 && optionsKeys[0] === '_v6') {\n      options = undefined;\n    }\n  }\n  if (options) {\n    bytes = v1Bytes(options.random ?? options.rng?.() ?? rng(), options.msecs, options.nsecs, options.clockseq, options.node, buf, offset);\n  } else {\n    const now = Date.now();\n    const rnds = rng();\n    updateV1State(_state, now, rnds);\n    bytes = v1Bytes(rnds, _state.msecs, _state.nsecs, isV6 ? undefined : _state.clockseq, isV6 ? undefined : _state.node, buf, offset);\n  }\n  return buf ? bytes : unsafeStringify(bytes);\n}\nexport function updateV1State(state, now, rnds) {\n  state.msecs ??= -Infinity;\n  state.nsecs ??= 0;\n  if (now === state.msecs) {\n    state.nsecs++;\n    if (state.nsecs >= 10000) {\n      state.node = undefined;\n      state.nsecs = 0;\n    }\n  } else if (now > state.msecs) {\n    state.nsecs = 0;\n  } else if (now < state.msecs) {\n    state.node = undefined;\n  }\n  if (!state.node) {\n    state.node = rnds.slice(10, 16);\n    state.node[0] |= 0x01;\n    state.clockseq = (rnds[8] << 8 | rnds[9]) & 0x3fff;\n  }\n  state.msecs = now;\n  return state;\n}\nfunction v1Bytes(rnds, msecs, nsecs, clockseq, node, buf, offset = 0) {\n  if (!buf) {\n    buf = new Uint8Array(16);\n    offset = 0;\n  }\n  msecs ??= Date.now();\n  nsecs ??= 0;\n  clockseq ??= (rnds[8] << 8 | rnds[9]) & 0x3fff;\n  node ??= rnds.slice(10, 16);\n  msecs += 12219292800000;\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  buf[offset++] = tl >>> 24 & 0xff;\n  buf[offset++] = tl >>> 16 & 0xff;\n  buf[offset++] = tl >>> 8 & 0xff;\n  buf[offset++] = tl & 0xff;\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  buf[offset++] = tmh >>> 8 & 0xff;\n  buf[offset++] = tmh & 0xff;\n  buf[offset++] = tmh >>> 24 & 0xf | 0x10;\n  buf[offset++] = tmh >>> 16 & 0xff;\n  buf[offset++] = clockseq >>> 8 | 0x80;\n  buf[offset++] = clockseq & 0xff;\n  for (let n = 0; n < 6; ++n) {\n    buf[offset++] = node[n];\n  }\n  return buf;\n}\nexport default v1;","map":{"version":3,"names":["rng","unsafeStringify","_state","v1","options","buf","offset","bytes","isV6","_v6","optionsKeys","Object","keys","length","undefined","v1Bytes","random","msecs","nsecs","clockseq","node","now","Date","rnds","updateV1State","state","Infinity","slice","Uint8Array","tl","tmh","n"],"sources":["../../src/v1.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}